package pe.gob.sunafil.tramiteext.persistence.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TdmvdRegreqtupaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public TdmvdRegreqtupaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andVNumanoregIsNull() {
            addCriterion("V_NUMANOREG is null");
            return (Criteria) this;
        }

        public Criteria andVNumanoregIsNotNull() {
            addCriterion("V_NUMANOREG is not null");
            return (Criteria) this;
        }

        public Criteria andVNumanoregEqualTo(String value) {
            addCriterion("V_NUMANOREG =", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregNotEqualTo(String value) {
            addCriterion("V_NUMANOREG <>", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregGreaterThan(String value) {
            addCriterion("V_NUMANOREG >", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregGreaterThanOrEqualTo(String value) {
            addCriterion("V_NUMANOREG >=", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregLessThan(String value) {
            addCriterion("V_NUMANOREG <", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregLessThanOrEqualTo(String value) {
            addCriterion("V_NUMANOREG <=", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregLike(String value) {
            addCriterion("V_NUMANOREG like", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregNotLike(String value) {
            addCriterion("V_NUMANOREG not like", value, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregIn(List<String> values) {
            addCriterion("V_NUMANOREG in", values, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregNotIn(List<String> values) {
            addCriterion("V_NUMANOREG not in", values, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregBetween(String value1, String value2) {
            addCriterion("V_NUMANOREG between", value1, value2, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andVNumanoregNotBetween(String value1, String value2) {
            addCriterion("V_NUMANOREG not between", value1, value2, "vNumanoreg");
            return (Criteria) this;
        }

        public Criteria andNNumdepIsNull() {
            addCriterion("N_NUMDEP is null");
            return (Criteria) this;
        }

        public Criteria andNNumdepIsNotNull() {
            addCriterion("N_NUMDEP is not null");
            return (Criteria) this;
        }

        public Criteria andNNumdepEqualTo(Short value) {
            addCriterion("N_NUMDEP =", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepNotEqualTo(Short value) {
            addCriterion("N_NUMDEP <>", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepGreaterThan(Short value) {
            addCriterion("N_NUMDEP >", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepGreaterThanOrEqualTo(Short value) {
            addCriterion("N_NUMDEP >=", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepLessThan(Short value) {
            addCriterion("N_NUMDEP <", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepLessThanOrEqualTo(Short value) {
            addCriterion("N_NUMDEP <=", value, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepIn(List<Short> values) {
            addCriterion("N_NUMDEP in", values, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepNotIn(List<Short> values) {
            addCriterion("N_NUMDEP not in", values, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepBetween(Short value1, Short value2) {
            addCriterion("N_NUMDEP between", value1, value2, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumdepNotBetween(Short value1, Short value2) {
            addCriterion("N_NUMDEP not between", value1, value2, "nNumdep");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocIsNull() {
            addCriterion("N_NUMTIPODOC is null");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocIsNotNull() {
            addCriterion("N_NUMTIPODOC is not null");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocEqualTo(Short value) {
            addCriterion("N_NUMTIPODOC =", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocNotEqualTo(Short value) {
            addCriterion("N_NUMTIPODOC <>", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocGreaterThan(Short value) {
            addCriterion("N_NUMTIPODOC >", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocGreaterThanOrEqualTo(Short value) {
            addCriterion("N_NUMTIPODOC >=", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocLessThan(Short value) {
            addCriterion("N_NUMTIPODOC <", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocLessThanOrEqualTo(Short value) {
            addCriterion("N_NUMTIPODOC <=", value, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocIn(List<Short> values) {
            addCriterion("N_NUMTIPODOC in", values, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocNotIn(List<Short> values) {
            addCriterion("N_NUMTIPODOC not in", values, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocBetween(Short value1, Short value2) {
            addCriterion("N_NUMTIPODOC between", value1, value2, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andNNumtipodocNotBetween(Short value1, Short value2) {
            addCriterion("N_NUMTIPODOC not between", value1, value2, "nNumtipodoc");
            return (Criteria) this;
        }

        public Criteria andVNumregIsNull() {
            addCriterion("V_NUMREG is null");
            return (Criteria) this;
        }

        public Criteria andVNumregIsNotNull() {
            addCriterion("V_NUMREG is not null");
            return (Criteria) this;
        }

        public Criteria andVNumregEqualTo(String value) {
            addCriterion("V_NUMREG =", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregNotEqualTo(String value) {
            addCriterion("V_NUMREG <>", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregGreaterThan(String value) {
            addCriterion("V_NUMREG >", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregGreaterThanOrEqualTo(String value) {
            addCriterion("V_NUMREG >=", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregLessThan(String value) {
            addCriterion("V_NUMREG <", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregLessThanOrEqualTo(String value) {
            addCriterion("V_NUMREG <=", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregLike(String value) {
            addCriterion("V_NUMREG like", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregNotLike(String value) {
            addCriterion("V_NUMREG not like", value, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregIn(List<String> values) {
            addCriterion("V_NUMREG in", values, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregNotIn(List<String> values) {
            addCriterion("V_NUMREG not in", values, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregBetween(String value1, String value2) {
            addCriterion("V_NUMREG between", value1, value2, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andVNumregNotBetween(String value1, String value2) {
            addCriterion("V_NUMREG not between", value1, value2, "vNumreg");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoIsNull() {
            addCriterion("N_NUMGRUPO is null");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoIsNotNull() {
            addCriterion("N_NUMGRUPO is not null");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoEqualTo(Short value) {
            addCriterion("N_NUMGRUPO =", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoNotEqualTo(Short value) {
            addCriterion("N_NUMGRUPO <>", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoGreaterThan(Short value) {
            addCriterion("N_NUMGRUPO >", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoGreaterThanOrEqualTo(Short value) {
            addCriterion("N_NUMGRUPO >=", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoLessThan(Short value) {
            addCriterion("N_NUMGRUPO <", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoLessThanOrEqualTo(Short value) {
            addCriterion("N_NUMGRUPO <=", value, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoIn(List<Short> values) {
            addCriterion("N_NUMGRUPO in", values, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoNotIn(List<Short> values) {
            addCriterion("N_NUMGRUPO not in", values, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoBetween(Short value1, Short value2) {
            addCriterion("N_NUMGRUPO between", value1, value2, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumgrupoNotBetween(Short value1, Short value2) {
            addCriterion("N_NUMGRUPO not between", value1, value2, "nNumgrupo");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestIsNull() {
            addCriterion("N_NUMDEPDEST is null");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestIsNotNull() {
            addCriterion("N_NUMDEPDEST is not null");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestEqualTo(Short value) {
            addCriterion("N_NUMDEPDEST =", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestNotEqualTo(Short value) {
            addCriterion("N_NUMDEPDEST <>", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestGreaterThan(Short value) {
            addCriterion("N_NUMDEPDEST >", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestGreaterThanOrEqualTo(Short value) {
            addCriterion("N_NUMDEPDEST >=", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestLessThan(Short value) {
            addCriterion("N_NUMDEPDEST <", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestLessThanOrEqualTo(Short value) {
            addCriterion("N_NUMDEPDEST <=", value, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestIn(List<Short> values) {
            addCriterion("N_NUMDEPDEST in", values, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestNotIn(List<Short> values) {
            addCriterion("N_NUMDEPDEST not in", values, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestBetween(Short value1, Short value2) {
            addCriterion("N_NUMDEPDEST between", value1, value2, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andNNumdepdestNotBetween(Short value1, Short value2) {
            addCriterion("N_NUMDEPDEST not between", value1, value2, "nNumdepdest");
            return (Criteria) this;
        }

        public Criteria andVCodtupaIsNull() {
            addCriterion("V_CODTUPA is null");
            return (Criteria) this;
        }

        public Criteria andVCodtupaIsNotNull() {
            addCriterion("V_CODTUPA is not null");
            return (Criteria) this;
        }

        public Criteria andVCodtupaEqualTo(String value) {
            addCriterion("V_CODTUPA =", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaNotEqualTo(String value) {
            addCriterion("V_CODTUPA <>", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaGreaterThan(String value) {
            addCriterion("V_CODTUPA >", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaGreaterThanOrEqualTo(String value) {
            addCriterion("V_CODTUPA >=", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaLessThan(String value) {
            addCriterion("V_CODTUPA <", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaLessThanOrEqualTo(String value) {
            addCriterion("V_CODTUPA <=", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaLike(String value) {
            addCriterion("V_CODTUPA like", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaNotLike(String value) {
            addCriterion("V_CODTUPA not like", value, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaIn(List<String> values) {
            addCriterion("V_CODTUPA in", values, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaNotIn(List<String> values) {
            addCriterion("V_CODTUPA not in", values, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaBetween(String value1, String value2) {
            addCriterion("V_CODTUPA between", value1, value2, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andVCodtupaNotBetween(String value1, String value2) {
            addCriterion("V_CODTUPA not between", value1, value2, "vCodtupa");
            return (Criteria) this;
        }

        public Criteria andNNumreqIsNull() {
            addCriterion("N_NUMREQ is null");
            return (Criteria) this;
        }

        public Criteria andNNumreqIsNotNull() {
            addCriterion("N_NUMREQ is not null");
            return (Criteria) this;
        }

        public Criteria andNNumreqEqualTo(Short value) {
            addCriterion("N_NUMREQ =", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqNotEqualTo(Short value) {
            addCriterion("N_NUMREQ <>", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqGreaterThan(Short value) {
            addCriterion("N_NUMREQ >", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqGreaterThanOrEqualTo(Short value) {
            addCriterion("N_NUMREQ >=", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqLessThan(Short value) {
            addCriterion("N_NUMREQ <", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqLessThanOrEqualTo(Short value) {
            addCriterion("N_NUMREQ <=", value, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqIn(List<Short> values) {
            addCriterion("N_NUMREQ in", values, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqNotIn(List<Short> values) {
            addCriterion("N_NUMREQ not in", values, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqBetween(Short value1, Short value2) {
            addCriterion("N_NUMREQ between", value1, value2, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andNNumreqNotBetween(Short value1, Short value2) {
            addCriterion("N_NUMREQ not between", value1, value2, "nNumreq");
            return (Criteria) this;
        }

        public Criteria andDFecregulaIsNull() {
            addCriterion("D_FECREGULA is null");
            return (Criteria) this;
        }

        public Criteria andDFecregulaIsNotNull() {
            addCriterion("D_FECREGULA is not null");
            return (Criteria) this;
        }

        public Criteria andDFecregulaEqualTo(Date value) {
            addCriterionForJDBCDate("D_FECREGULA =", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaNotEqualTo(Date value) {
            addCriterionForJDBCDate("D_FECREGULA <>", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaGreaterThan(Date value) {
            addCriterionForJDBCDate("D_FECREGULA >", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("D_FECREGULA >=", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaLessThan(Date value) {
            addCriterionForJDBCDate("D_FECREGULA <", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("D_FECREGULA <=", value, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaIn(List<Date> values) {
            addCriterionForJDBCDate("D_FECREGULA in", values, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaNotIn(List<Date> values) {
            addCriterionForJDBCDate("D_FECREGULA not in", values, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("D_FECREGULA between", value1, value2, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andDFecregulaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("D_FECREGULA not between", value1, value2, "dFecregula");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoIsNull() {
            addCriterion("N_FLGPRESENTADO is null");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoIsNotNull() {
            addCriterion("N_FLGPRESENTADO is not null");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoEqualTo(Short value) {
            addCriterion("N_FLGPRESENTADO =", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoNotEqualTo(Short value) {
            addCriterion("N_FLGPRESENTADO <>", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoGreaterThan(Short value) {
            addCriterion("N_FLGPRESENTADO >", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoGreaterThanOrEqualTo(Short value) {
            addCriterion("N_FLGPRESENTADO >=", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoLessThan(Short value) {
            addCriterion("N_FLGPRESENTADO <", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoLessThanOrEqualTo(Short value) {
            addCriterion("N_FLGPRESENTADO <=", value, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoIn(List<Short> values) {
            addCriterion("N_FLGPRESENTADO in", values, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoNotIn(List<Short> values) {
            addCriterion("N_FLGPRESENTADO not in", values, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoBetween(Short value1, Short value2) {
            addCriterion("N_FLGPRESENTADO between", value1, value2, "nFlgpresentado");
            return (Criteria) this;
        }

        public Criteria andNFlgpresentadoNotBetween(Short value1, Short value2) {
            addCriterion("N_FLGPRESENTADO not between", value1, value2, "nFlgpresentado");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 14 12:53:03 COT 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TRAMITE.TDMVD_REGREQTUPA
     *
     * @mbggenerated Tue Mar 14 12:53:03 COT 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}